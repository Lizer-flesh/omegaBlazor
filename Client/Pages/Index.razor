@page "/"
@inject HttpClient Http
@using Landing.Shared.Entities
@inject NavigationManager NavigationManager

@if (for_index)
{
    <PageTitle>Index</PageTitle>
    <h1>Вход</h1>

    <div class="entrance">
        <div class="login">
           <h4>Введите login</h4>
           <input  type="email" @bind="@login"/>
        </div>
        <div class="password">
            <h4>Введите пароль</h4>
            <input type="password" @bind="@password"/>
        </div>
            <h3><button id="EntranceBut" @onclick="click">Войти</button></h3>
        <h4>@message</h4>
        
    </div>
}
else
{
    <h4>Вы уже авторизованы</h4>
}


@code{
    public static bool for_index = true;
    public static bool for_pages;
    private string message;
    public static int identUser;
    public string login { get; set; }
    public string password { get; set; }
    public string res { get; set; }

    protected User user = new User();
    protected static Cart carts = new Cart();

    async void click()
    {
        
        using var response = await Http.PostAsJsonAsync($"Users/?login={login}&password={password}", "");
        //var readAsStringAsync = await response.Content.ReadAsStringAsync();

        User User = await response.Content.ReadFromJsonAsync<User>();
        if(User.login != null)
        {
            for_index = false;
            for_pages = true;
            identUser = User.Id;
            
            using var responseId = await Http.GetAsync($"Cart/api/Cart/GetById/?identUser={identUser}");
            IQueryable? Cart = await response.Content.ReadFromJsonAsync<IQueryable>();
            if (Cart != null)
            {
                Console.WriteLine("goog");
            }
            NavigationManager.NavigateTo("counter");
        }
        else
        {
            message = "Неверный логин или пароль";
            NavigationManager.NavigateTo("/");
        }
    }
}


